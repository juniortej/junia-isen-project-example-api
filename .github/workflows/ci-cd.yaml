name: CI/CD - Shop-En-Nuage

env:
  REGISTRY: ghcir.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: ['main']

permissions:
  contents: read
  id-token: write
  packages: write
  attestations: write

jobs:
  test:
    name: API Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
        
      - name: Install Dependencies
        run: |
          cd api/shop-api
          npm install

      - name: Run Tests
        run: |
          cd api/shop-api
          npm test

  build-and-publish-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
    
      - name: Access Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Publish Docker Image
        id: publish
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.publish.outputs.digest }}
          push-to-registry: true
    
  deploy-image-to-app-service:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build-and-publish-docker-image
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'your-app-service-name'
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}